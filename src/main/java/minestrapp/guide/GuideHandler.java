package minestrapp.guide;

import minestrapp.ItemsRegistry;
import minestrapp.Minestrappolation;
import net.minecraft.init.Blocks;
import net.minecraft.init.Items;
import net.minecraft.item.ItemStack;
import net.minecraft.util.ResourceLocation;
import werty.guidance.gui.EnumPageType;
import werty.guidance.gui.GuideEntry;
import werty.guidance.gui.GuideGroup;
import werty.guidance.gui.GuideInfoPage;
import werty.guidance.gui.GuideManager;

public class GuideHandler {
	public static GuideManager manager = new GuideManager();
	
	public static GuideGroup basics = new GuideGroup("Game Mechanics");
	public static GuideGroup plant = new GuideGroup("Organic Blocks");
	public static GuideGroup soil = new GuideGroup("Soil Blocks");
	public static GuideGroup frost = new GuideGroup("Frozen Blocks");
	public static GuideGroup stone = new GuideGroup("Stone Blocks");
	public static GuideGroup ore = new GuideGroup("Ores");
	public static GuideGroup resource = new GuideGroup("Resource Storage Blocks");
	public static GuideGroup glass = new GuideGroup("Glass Blocks");
	public static GuideGroup misc_building = new GuideGroup("Misc. Building Blocks");
	public static GuideGroup wood_building = new GuideGroup("Wood Building Blocks");
	public static GuideGroup stone_building = new GuideGroup("Stone Building Blocks");
	public static GuideGroup decor = new GuideGroup("Decorative Blocks");
	public static GuideGroup utility = new GuideGroup("Utility Blocks");
	public static GuideGroup redstone = new GuideGroup("Redstone Mechanisms");
	public static GuideGroup machine = new GuideGroup("Tool/Machine Blocks");
	public static GuideGroup crops = new GuideGroup("Seeds & Crops");
	public static GuideGroup materials = new GuideGroup("Raw Materials");
	public static GuideGroup mob_loot = new GuideGroup("Mob Loot");
	public static GuideGroup ingredients = new GuideGroup("Crafting Ingredients");
	public static GuideGroup food = new GuideGroup("Foodstuffs");
	public static GuideGroup potions = new GuideGroup("Potions");
	public static GuideGroup enchant = new GuideGroup("Enchantments");
	public static GuideGroup transport = new GuideGroup("Transportation Items");
	public static GuideGroup tool = new GuideGroup("Tools");
	public static GuideGroup special_tool = new GuideGroup("Specialty Tools");
	public static GuideGroup weapon = new GuideGroup("Weapons");
	public static GuideGroup special_weapon = new GuideGroup("Specialty Weapons");
	public static GuideGroup armor = new GuideGroup("Armor");
	
	public static void preInit(){
		manager.textColor = 0;
		
		manager.imgGuide = new ResourceLocation(Minestrappolation.MODID+":textures/gui/guide.png");
		manager.imgGuideBG = new ResourceLocation(Minestrappolation.MODID+":textures/gui/guideBG.png");
		
		manager.registerEntryGroup(basics);
		manager.registerEntryGroup(plant);
		manager.registerEntryGroup(soil);
		manager.registerEntryGroup(frost);
		manager.registerEntryGroup(stone);
		manager.registerEntryGroup(ore);
		manager.registerEntryGroup(resource);
		manager.registerEntryGroup(glass);
		manager.registerEntryGroup(misc_building);
		manager.registerEntryGroup(wood_building);
		manager.registerEntryGroup(stone_building);
		manager.registerEntryGroup(decor);
		manager.registerEntryGroup(utility);
		manager.registerEntryGroup(redstone);
		manager.registerEntryGroup(machine);
		manager.registerEntryGroup(crops);
		manager.registerEntryGroup(materials);
		manager.registerEntryGroup(mob_loot);
		manager.registerEntryGroup(ingredients);
		manager.registerEntryGroup(food);
		manager.registerEntryGroup(potions);
		manager.registerEntryGroup(enchant);
		manager.registerEntryGroup(transport);
		manager.registerEntryGroup(tool);
		manager.registerEntryGroup(special_tool);
		manager.registerEntryGroup(weapon);
		manager.registerEntryGroup(special_weapon);
		manager.registerEntryGroup(armor);
		
		basics.addEntry(new GuideEntry("minechiridion", "Minechiridion", new ItemStack(ItemsRegistry.minechiridion), 32+(0*16), 32));
		manager.registerInfoPage("minechiridion", new GuideInfoPage("minechiridion", EnumPageType.INFO));
		
		plant.addEntry(new GuideEntry("tallgrass", "Tallgrass", new ItemStack(Blocks.TALLGRASS, 0, 1), 32+(0*16), 32));
		manager.registerInfoPage("tallgrass", new GuideInfoPage("tallgrass", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("double_tallgrass", "Double Tallgrass", new ItemStack(Blocks.DOUBLE_PLANT, 0, 2), 32+(1*16), 32));
		manager.registerInfoPage("double_tallgrass", new GuideInfoPage("double_tallgrass", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("fern", "Fern", new ItemStack(Blocks.TALLGRASS, 0, 2), 32+(2*16), 32));
		manager.registerInfoPage("fern", new GuideInfoPage("fern", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("double_fern", "Large Fern", new ItemStack(Blocks.DOUBLE_PLANT, 0, 3), 32+(3*16), 32));
		manager.registerInfoPage("double_fern", new GuideInfoPage("double_fern", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("deadbush", "Dead Bush", new ItemStack(Blocks.DEADBUSH), 32+(4*16), 32));
		manager.registerInfoPage("deadbush", new GuideInfoPage("deadbush", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("waterlilly", "Lily Pad", new ItemStack(Blocks.WATERLILY), 32+(5*16), 32));
		manager.registerInfoPage("waterlilly", new GuideInfoPage("waterlilly", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("dandelion", "Dandelion", new ItemStack(Blocks.YELLOW_FLOWER), 32+(6*16), 32));
		manager.registerInfoPage("dandelion", new GuideInfoPage("dandelion", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("poppy", "Poppy", new ItemStack(Blocks.RED_FLOWER, 0, 0), 32+(7*16), 32));
		manager.registerInfoPage("poppy", new GuideInfoPage("poppy", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("orchid", "Blue Orchid", new ItemStack(Blocks.RED_FLOWER, 0, 1), 32+(8*16), 32));
		manager.registerInfoPage("orchid", new GuideInfoPage("orchid", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("allium", "Allium", new ItemStack(Blocks.RED_FLOWER, 0, 2), 32+(9*16), 32));
		manager.registerInfoPage("allium", new GuideInfoPage("allium", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("azure_bluet", "Azure Bluet", new ItemStack(Blocks.RED_FLOWER, 0, 3), 32+(10*16), 32));
		manager.registerInfoPage("azure_bluet", new GuideInfoPage("azure_bluet", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("red_tulip", "Red Tulip", new ItemStack(Blocks.RED_FLOWER, 0, 4), 32+(11*16), 32));
		manager.registerInfoPage("red_tulip", new GuideInfoPage("red_tulip", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("orange_tulip", "Orange Tulip", new ItemStack(Blocks.RED_FLOWER, 0, 5), 32+(12*16), 32));
		manager.registerInfoPage("orange_tulip", new GuideInfoPage("orange_tulip", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("white_tulip", "White Tulip", new ItemStack(Blocks.RED_FLOWER, 0, 6), 32+(13*16), 32));
		manager.registerInfoPage("white_tulip", new GuideInfoPage("white_tulip", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("pink_tulip", "Pink Tulip", new ItemStack(Blocks.RED_FLOWER, 0, 7), 32+(14*16), 32));
		manager.registerInfoPage("pink_tulip", new GuideInfoPage("pink_tulip", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("oxeye_daisy", "Oxeye Daisy", new ItemStack(Blocks.RED_FLOWER, 0, 8), 32+(15*16), 32));
		manager.registerInfoPage("oxeye_daisy", new GuideInfoPage("oxeye_daisy", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("sunflower", "Sunflower", new ItemStack(Blocks.DOUBLE_PLANT, 0, 0), 32+(0*16), 58));
		manager.registerInfoPage("sunflower", new GuideInfoPage("sunflower", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("lilac", "Lilac", new ItemStack(Blocks.DOUBLE_PLANT, 0, 1), 32+(1*16), 58));
		manager.registerInfoPage("lilac", new GuideInfoPage("lilac", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("rose_bush", "Rose Bush", new ItemStack(Blocks.DOUBLE_PLANT, 0, 4), 32+(2*16), 58));
		manager.registerInfoPage("rose_bush", new GuideInfoPage("rose_bush", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("peony", "Peony", new ItemStack(Blocks.DOUBLE_PLANT, 0, 5), 32+(3*16), 58));
		manager.registerInfoPage("peony", new GuideInfoPage("peony", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("red_mushroom", "Red Mushroom", new ItemStack(Blocks.RED_MUSHROOM), 32+(4*16), 58));
		manager.registerInfoPage("red_mushroom", new GuideInfoPage("red_mushroom", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("brown_mushroom", "Brown Mushroom", new ItemStack(Blocks.BROWN_MUSHROOM), 32+(5*16), 58));
		manager.registerInfoPage("brown_mushroom", new GuideInfoPage("brown_mushroom", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("oak_sapling", "Oak Sapling", new ItemStack(Blocks.SAPLING, 0, 0), 32+(6*16), 58));
		manager.registerInfoPage("oak_sapling", new GuideInfoPage("oak_sapling", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("spruce_sapling", "Spruce Sapling", new ItemStack(Blocks.SAPLING, 0, 1), 32+(7*16), 58));
		manager.registerInfoPage("spruce_sapling", new GuideInfoPage("spruce_sapling", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("birch_sapling", "Birch Sapling", new ItemStack(Blocks.SAPLING, 0, 2), 32+(8*16), 58));
		manager.registerInfoPage("birch_sapling", new GuideInfoPage("birch_sapling", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("jungle_sapling", "Jungle Sapling", new ItemStack(Blocks.SAPLING, 0, 3), 32+(9*16), 58));
		manager.registerInfoPage("jungle_sapling", new GuideInfoPage("jungle_sapling", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("acacia_sapling", "Acacia Sapling", new ItemStack(Blocks.SAPLING, 0, 4), 32+(10*16), 58));
		manager.registerInfoPage("acacia_sapling", new GuideInfoPage("acacia_sapling", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("dark_oak_sapling", "Dark Oak Sapling", new ItemStack(Blocks.SAPLING, 0, 5), 32+(11*16), 58));
		manager.registerInfoPage("dark_oak_sapling", new GuideInfoPage("dark_oak_sapling", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("oak_leaves", "Oak Leaves", new ItemStack(Blocks.LEAVES, 0, 0), 32+(12*16), 58));
		manager.registerInfoPage("oak_leaves", new GuideInfoPage("oak_leaves", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("spruce_leaves", "Spruce Leaves", new ItemStack(Blocks.LEAVES, 0, 1), 32+(13*16), 58));
		manager.registerInfoPage("spruce_leaves", new GuideInfoPage("spruce_leaves", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("birch_leaves", "Birch Leaves", new ItemStack(Blocks.LEAVES, 0, 2), 32+(14*16), 58));
		manager.registerInfoPage("birch_leaves", new GuideInfoPage("birch_leaves", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("jungle_leaves", "Jungle Leaves", new ItemStack(Blocks.LEAVES, 0, 3), 32+(15*16), 58));
		manager.registerInfoPage("jungle_leaves", new GuideInfoPage("jungle_leaves", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("acacia_leaves", "Acacia Leaves", new ItemStack(Blocks.LEAVES2, 0, 0), 32+(0*16), 84));
		manager.registerInfoPage("acacia_leaves", new GuideInfoPage("acacia_leaves", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("dark_oak_leaves", "Dark Oak Leaves", new ItemStack(Blocks.LEAVES2, 0, 1), 32+(1*16), 84));
		manager.registerInfoPage("dark_oak_leaves", new GuideInfoPage("dark_oak_leaves", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("brown_mushroom_block", "Brown Mushroom Block", new ItemStack(Blocks.BROWN_MUSHROOM_BLOCK), 32+(2*16), 84));
		manager.registerInfoPage("brown_mushroom_block", new GuideInfoPage("brown_mushroom_block", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("red_mushroom_block", "Red Mushroom Block", new ItemStack(Blocks.RED_MUSHROOM_BLOCK), 32+(3*16), 84));
		manager.registerInfoPage("red_mushroom_block", new GuideInfoPage("red_mushroom_block", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("vine", "Vines", new ItemStack(Blocks.VINE), 32+(4*16), 84));
		manager.registerInfoPage("vine", new GuideInfoPage("vine", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("reeds", "Sugar Cane", new ItemStack(Items.REEDS), 32+(5*16), 84));
		manager.registerInfoPage("reeds", new GuideInfoPage("reeds", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("cactus", "Cactus", new ItemStack(Blocks.CACTUS), 32+(6*16), 84));
		manager.registerInfoPage("cactus", new GuideInfoPage("cactus", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("melon", "Melon", new ItemStack(Blocks.MELON_BLOCK), 32+(7*16), 84));
		manager.registerInfoPage("melon", new GuideInfoPage("melon", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("pumpkin", "Pumpkin", new ItemStack(Blocks.PUMPKIN), 32+(8*16), 84));
		manager.registerInfoPage("pumpkin", new GuideInfoPage("pumpkin", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("sponge", "Sponge", new ItemStack(Blocks.SPONGE, 0, 0), 32+(9*16), 84));
		manager.registerInfoPage("sponge", new GuideInfoPage("sponge", EnumPageType.INFO));
		plant.addEntry(new GuideEntry("wet_sponge", "Wet Sponge", new ItemStack(Blocks.SPONGE, 0, 1), 32+(10*16), 84));
		manager.registerInfoPage("wet_sponge", new GuideInfoPage("wet_sponge", EnumPageType.INFO));
		
		soil.addEntry(new GuideEntry("dirt", "Dirt", new ItemStack(Blocks.DIRT, 0, 0), 32+(0*16), 32));
		manager.registerInfoPage("dirt", new GuideInfoPage("dirt", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("coarse_dirt", "Coarse Dirt", new ItemStack(Blocks.DIRT, 0, 1), 32+(1*16), 32));
		manager.registerInfoPage("coarse_dirt", new GuideInfoPage("coarse_dirt", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("grass", "Grass", new ItemStack(Blocks.GRASS), 32+(2*16), 32));
		manager.registerInfoPage("grass", new GuideInfoPage("grass", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("podzol", "Podzol", new ItemStack(Blocks.DIRT, 0, 2), 32+(3*16), 32));
		manager.registerInfoPage("podzol", new GuideInfoPage("podzol", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("mycelium", "Mycelium", new ItemStack(Blocks.MYCELIUM), 32+(4*16), 32));
		manager.registerInfoPage("mycelium", new GuideInfoPage("mycelium", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("sand", "Sand", new ItemStack(Blocks.SAND, 0, 0), 32+(5*16), 32));
		manager.registerInfoPage("sand", new GuideInfoPage("sand", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("red_sand", "Red Sand", new ItemStack(Blocks.SAND, 0, 1), 32+(6*16), 32));
		manager.registerInfoPage("red_sand", new GuideInfoPage("red_sand", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("clay", "Clay", new ItemStack(Blocks.CLAY), 32+(7*16), 32));
		manager.registerInfoPage("clay", new GuideInfoPage("clay", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("gravel", "Gravel", new ItemStack(Blocks.GRAVEL), 32+(8*16), 32));
		manager.registerInfoPage("gravel", new GuideInfoPage("gravel", EnumPageType.INFO));
		soil.addEntry(new GuideEntry("soul_sand", "Soul Sand", new ItemStack(Blocks.SOUL_SAND), 32+(9*16), 32));
		manager.registerInfoPage("soul_sand", new GuideInfoPage("soul_sand", EnumPageType.INFO));
		
		frost.addEntry(new GuideEntry("snow_layer", "Snow", new ItemStack(Blocks.SNOW_LAYER, 0, 0), 32+(0*16), 32));
		manager.registerInfoPage("snow_layer", new GuideInfoPage("snow_layer", EnumPageType.INFO));
		frost.addEntry(new GuideEntry("snow", "Block of Snow", new ItemStack(Blocks.SNOW), 32+(1*16), 32));
		manager.registerInfoPage("snow", new GuideInfoPage("snow", EnumPageType.INFO));
		frost.addEntry(new GuideEntry("ice", "Ice", new ItemStack(Blocks.ICE), 32+(2*16), 32));
		manager.registerInfoPage("ice", new GuideInfoPage("ice", EnumPageType.INFO));
		
		stone.addEntry(new GuideEntry("stone", "Stone", new ItemStack(Blocks.STONE, 1, 0), 32+(0*16), 32));
		manager.registerInfoPage("stone", new GuideInfoPage("stone", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("granite", "Granite", new ItemStack(Blocks.STONE, 1, 1), 32+(1*16), 32));
		manager.registerInfoPage("granite", new GuideInfoPage("granite", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("diorite", "Diorite", new ItemStack(Blocks.STONE, 1, 3), 32+(2*16), 32));
		manager.registerInfoPage("diorite", new GuideInfoPage("diorite", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("andesite", "Andesite", new ItemStack(Blocks.STONE, 1, 5), 32+(3*16), 32));
		manager.registerInfoPage("andesite", new GuideInfoPage("andesite", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("sandstone", "Sandstone", new ItemStack(Blocks.SANDSTONE, 0, 0), 32+(4*16), 32));
		manager.registerInfoPage("sandstone", new GuideInfoPage("sandstone", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("hardened_clay", "Hardened Clay", new ItemStack(Blocks.HARDENED_CLAY), 32+(5*16), 32));
		manager.registerInfoPage("hardened_clay", new GuideInfoPage("hardened_clay", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("netherrack", "Netherrack", new ItemStack(Blocks.NETHERRACK), 32+(6*16), 32));
		manager.registerInfoPage("netherrack", new GuideInfoPage("netherrack", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("glowstone", "Glowstone", new ItemStack(Blocks.GLOWSTONE), 32+(7*16), 32));
		manager.registerInfoPage("glowstone", new GuideInfoPage("glowstone", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("end_stone", "End Stone", new ItemStack(Blocks.END_STONE), 32+(8*16), 32));
		manager.registerInfoPage("end_stone", new GuideInfoPage("end_stone", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("obsidian", "Obsidian", new ItemStack(Blocks.OBSIDIAN), 32+(9*16), 32));
		manager.registerInfoPage("obsidian", new GuideInfoPage("obsidian", EnumPageType.INFO));
		stone.addEntry(new GuideEntry("bedrock", "Bedrock", new ItemStack(Blocks.BEDROCK), 32+(10*16), 32));
		manager.registerInfoPage("bedrock", new GuideInfoPage("bedrock", EnumPageType.INFO));
		
		ore.addEntry(new GuideEntry("coal_ore", "Coal Ore", new ItemStack(Blocks.COAL_ORE), 32+(0*16), 32));
		manager.registerInfoPage("coal_ore", new GuideInfoPage("coal_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("iron_ore", "Iron Ore", new ItemStack(Blocks.IRON_ORE), 32+(1*16), 32));
		manager.registerInfoPage("iron_ore", new GuideInfoPage("iron_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("gold_ore", "Gold Ore", new ItemStack(Blocks.GOLD_ORE), 32+(2*16), 32));
		manager.registerInfoPage("gold_ore", new GuideInfoPage("gold_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("redstone_ore", "Redstone Ore", new ItemStack(Blocks.REDSTONE_ORE), 32+(3*16), 32));
		manager.registerInfoPage("redstone_ore", new GuideInfoPage("redstone_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("lapis_ore", "Lapis Lazuli Ore", new ItemStack(Blocks.LAPIS_ORE), 32+(4*16), 32));
		manager.registerInfoPage("lapis_ore", new GuideInfoPage("lapis_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("diamond_ore", "Diamond Ore", new ItemStack(Blocks.DIAMOND_ORE), 32+(5*16), 32));
		manager.registerInfoPage("diamond_ore", new GuideInfoPage("diamond_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("emerald_ore", "Emerald Ore", new ItemStack(Blocks.EMERALD_ORE), 32+(6*16), 32));
		manager.registerInfoPage("emerald_ore", new GuideInfoPage("emerald_ore", EnumPageType.INFO));
		ore.addEntry(new GuideEntry("quartz_ore", "Nether Quartz Ore", new ItemStack(Blocks.QUARTZ_ORE), 32+(7*16), 32));
		manager.registerInfoPage("quartz_ore", new GuideInfoPage("quartz_ore", EnumPageType.INFO));
		
		resource.addEntry(new GuideEntry("iron_block", "Block of Iron", new ItemStack(Blocks.IRON_BLOCK), 32+(0*16), 32));
		manager.registerInfoPage("iron_block", new GuideInfoPage("iron_block", EnumPageType.INFO));
		resource.addEntry(new GuideEntry("gold_block", "Block of Gold", new ItemStack(Blocks.GOLD_BLOCK), 32+(1*16), 32));
		manager.registerInfoPage("gold_block", new GuideInfoPage("gold_block", EnumPageType.INFO));
		resource.addEntry(new GuideEntry("lapis_block", "Lapis Lazuli Block", new ItemStack(Blocks.LAPIS_BLOCK), 32+(2*16), 32));
		manager.registerInfoPage("lapis_block", new GuideInfoPage("lapis_block", EnumPageType.INFO));
		resource.addEntry(new GuideEntry("diamond_block", "Block of Diamond", new ItemStack(Blocks.DIAMOND_BLOCK), 32+(3*16), 32));
		manager.registerInfoPage("diamond_block", new GuideInfoPage("diamond_block", EnumPageType.INFO));
		resource.addEntry(new GuideEntry("emerald_block", "Block of Emerald", new ItemStack(Blocks.EMERALD_BLOCK), 32+(4*16), 32));
		manager.registerInfoPage("emerald_block", new GuideInfoPage("emerald_block", EnumPageType.INFO));
		
		glass.addEntry(new GuideEntry("glass", "Glass", new ItemStack(Blocks.GLASS), 32+(0*16), 32));
		manager.registerInfoPage("glass", new GuideInfoPage("glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("white_stained_glass", "White Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 0), 32+(1*16), 32));
		manager.registerInfoPage("white_stained_glass", new GuideInfoPage("white_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("light_gray_stained_glass", "Light Gray Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 8), 32+(2*16), 32));
		manager.registerInfoPage("light_gray_stained_glass", new GuideInfoPage("light_gray_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("gray_stained_glass", "Gray Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 7), 32+(3*16), 32));
		manager.registerInfoPage("gray_stained_glass", new GuideInfoPage("gray_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("black_stained_glass", "Black Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 15), 32+(4*16), 32));
		manager.registerInfoPage("black_stained_glass", new GuideInfoPage("black_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("brown_stained_glass", "Brown Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 12), 32+(5*16), 32));
		manager.registerInfoPage("brown_stained_glass", new GuideInfoPage("brown_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("red_stained_glass", "Red Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 14), 32+(6*16), 32));
		manager.registerInfoPage("red_stained_glass", new GuideInfoPage("red_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("orange_stained_glass", "Orange Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 1), 32+(7*16), 32));
		manager.registerInfoPage("orange_stained_glass", new GuideInfoPage("orange_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("yellow_stained_glass", "Yellow Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 4), 32+(8*16), 32));
		manager.registerInfoPage("yellow_stained_glass", new GuideInfoPage("yellow_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("lime_stained_glass", "Lime Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 5), 32+(9*16), 32));
		manager.registerInfoPage("lime_stained_glass", new GuideInfoPage("lime_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("green_stained_glass", "Green Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 13), 32+(10*16), 32));
		manager.registerInfoPage("green_stained_glass", new GuideInfoPage("green_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("cyan_stained_glass", "Cyan Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 9), 32+(11*16), 32));
		manager.registerInfoPage("cyan_stained_glass", new GuideInfoPage("cyan_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("light_blue_stained_glass", "Light Blue Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 3), 32+(12*16), 32));
		manager.registerInfoPage("light_blue_stained_glass", new GuideInfoPage("light_blue_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("blue_stained_glass", "Blue Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 11), 32+(13*16), 32));
		manager.registerInfoPage("blue_stained_glass", new GuideInfoPage("blue_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("purple_stained_glass", "Purple Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 10), 32+(14*16), 32));
		manager.registerInfoPage("purple_stained_glass", new GuideInfoPage("purple_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("magenta_stained_glass", "Magenta Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 2), 32+(15*16), 32));
		manager.registerInfoPage("magenta_stained_glass", new GuideInfoPage("magenta_stained_glass", EnumPageType.INFO));
		glass.addEntry(new GuideEntry("pink_stained_glass", "Pink Stained Glass", new ItemStack(Blocks.STAINED_GLASS, 1, 6), 32+(0*16), 58));
		manager.registerInfoPage("pink_stained_glass", new GuideInfoPage("pink_stained_glass", EnumPageType.INFO));
		
		misc_building.addEntry(new GuideEntry("white_wool", "Wool", new ItemStack(Blocks.WOOL, 1, 0), 32+(0*16), 32));
		manager.registerInfoPage("white_wool", new GuideInfoPage("white_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("light_gray_wool", "Light Gray Wool", new ItemStack(Blocks.WOOL, 1, 8), 32+(1*16), 32));
		manager.registerInfoPage("light_gray_wool", new GuideInfoPage("light_gray_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("gray_wool", "Gray Wool", new ItemStack(Blocks.WOOL, 1, 7), 32+(2*16), 32));
		manager.registerInfoPage("gray_wool", new GuideInfoPage("gray_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("black_wool", "Black Wool", new ItemStack(Blocks.WOOL, 1, 15), 32+(3*16), 32));
		manager.registerInfoPage("black_wool", new GuideInfoPage("black_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("brown_wool", "Brown Wool", new ItemStack(Blocks.WOOL, 1, 12), 32+(4*16), 32));
		manager.registerInfoPage("brown_wool", new GuideInfoPage("brown_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("red_wool", "Red Wool", new ItemStack(Blocks.WOOL, 1, 14), 32+(5*16), 32));
		manager.registerInfoPage("red_wool", new GuideInfoPage("red_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("orange_wool", "Orange Wool", new ItemStack(Blocks.WOOL, 1, 1), 32+(6*16), 32));
		manager.registerInfoPage("orange_wool", new GuideInfoPage("orange_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("yellow_wool", "Yellow Wool", new ItemStack(Blocks.WOOL, 1, 4), 32+(7*16), 32));
		manager.registerInfoPage("yellow_wool", new GuideInfoPage("yellow_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("lime_wool", "Lime Wool", new ItemStack(Blocks.WOOL, 1, 5), 32+(8*16), 32));
		manager.registerInfoPage("lime_wool", new GuideInfoPage("lime_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("green_wool", "Green Wool", new ItemStack(Blocks.WOOL, 1, 13), 32+(9*16), 32));
		manager.registerInfoPage("green_wool", new GuideInfoPage("green_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("cyan_wool", "Cyan Wool", new ItemStack(Blocks.WOOL, 1, 9), 32+(10*16), 32));
		manager.registerInfoPage("cyan_wool", new GuideInfoPage("cyan_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("light_blue_wool", "Light Blue Wool", new ItemStack(Blocks.WOOL, 1, 3), 32+(11*16), 32));
		manager.registerInfoPage("light_blue_wool", new GuideInfoPage("light_blue_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("blue_wool", "Blue Wool", new ItemStack(Blocks.WOOL, 1, 11), 32+(12*16), 32));
		manager.registerInfoPage("blue_wool", new GuideInfoPage("blue_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("purple_wool", "Purple Wool", new ItemStack(Blocks.WOOL, 1, 10), 32+(13*16), 32));
		manager.registerInfoPage("purple_wool", new GuideInfoPage("purple_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("magenta_wool", "Magenta Wool", new ItemStack(Blocks.WOOL, 1, 2), 32+(14*16), 32));
		manager.registerInfoPage("magenta_wool", new GuideInfoPage("magenta_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("pink_wool", "Pink Wool", new ItemStack(Blocks.WOOL, 1, 6), 32+(15*16), 32));
		manager.registerInfoPage("pink_wool", new GuideInfoPage("pink_wool", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("white_stained_clay", "White Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 0), 32+(0*16), 58));
		manager.registerInfoPage("white_stained_clay", new GuideInfoPage("white_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("light_gray_stained_clay", "Light Gray Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 8), 32+(1*16), 58));
		manager.registerInfoPage("light_gray_stained_clay", new GuideInfoPage("light_gray_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("gray_stained_clay", "Gray Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 7), 32+(2*16), 58));
		manager.registerInfoPage("gray_stained_clay", new GuideInfoPage("gray_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("black_stained_clay", "Black Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 15), 32+(3*16), 58));
		manager.registerInfoPage("black_stained_clay", new GuideInfoPage("black_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("brown_stained_clay", "Brown Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 12), 32+(4*16), 58));
		manager.registerInfoPage("brown_stained_clay", new GuideInfoPage("brown_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("red_stained_clay", "Red Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 14), 32+(5*16), 58));
		manager.registerInfoPage("red_stained_clay", new GuideInfoPage("red_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("orange_stained_clay", "Orange Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 1), 32+(6*16), 58));
		manager.registerInfoPage("orange_stained_clay", new GuideInfoPage("orange_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("yellow_stained_clay", "Yellow Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 4), 32+(7*16), 58));
		manager.registerInfoPage("yellow_stained_clay", new GuideInfoPage("yellow_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("lime_stained_clay", "Lime Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 5), 32+(8*16), 58));
		manager.registerInfoPage("lime_stained_clay", new GuideInfoPage("lime_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("green_stained_clay", "Green Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 13), 32+(9*16), 58));
		manager.registerInfoPage("green_stained_clay", new GuideInfoPage("green_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("cyan_stained_clay", "Cyan Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 9), 32+(10*16), 58));
		manager.registerInfoPage("cyan_stained_clay", new GuideInfoPage("cyan_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("light_blue_stained_clay", "Light Blue Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 3), 32+(11*16), 58));
		manager.registerInfoPage("light_blue_stained_clay", new GuideInfoPage("light_blue_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("blue_stained_clay", "Blue Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 11), 32+(12*16), 58));
		manager.registerInfoPage("blue_stained_clay", new GuideInfoPage("blue_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("purple_stained_clay", "Purple Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 10), 32+(13*16), 58));
		manager.registerInfoPage("purple_stained_clay", new GuideInfoPage("purple_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("magenta_stained_clay", "Magenta Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 2), 32+(14*16), 58));
		manager.registerInfoPage("magenta_stained_clay", new GuideInfoPage("magenta_stained_clay", EnumPageType.INFO));
		misc_building.addEntry(new GuideEntry("pink_stained_clay", "Pink Stained Clay", new ItemStack(Blocks.STAINED_HARDENED_CLAY, 1, 6), 32+(15*16), 58));
		manager.registerInfoPage("pink_stained_clay", new GuideInfoPage("pink_stained_clay", EnumPageType.INFO));
		
		wood_building.addEntry(new GuideEntry("oak_log", "Oak Wood", new ItemStack(Blocks.LOG, 1, 0), 32+(0*16), 32));
		manager.registerInfoPage("oak_log", new GuideInfoPage("oak_log", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("spruce_log", "Spruce Wood", new ItemStack(Blocks.LOG, 1, 1), 32+(1*16), 32));
		manager.registerInfoPage("spruce_log", new GuideInfoPage("spruce_log", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("birch_log", "Birch Wood", new ItemStack(Blocks.LOG, 1, 2), 32+(2*16), 32));
		manager.registerInfoPage("birch_log", new GuideInfoPage("birch_log", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("jungle_log", "Jungle Wood", new ItemStack(Blocks.LOG, 1, 3), 32+(3*16), 32));
		manager.registerInfoPage("jungle_log", new GuideInfoPage("jungle_log", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("acacia_log", "Acacia Wood", new ItemStack(Blocks.LOG2, 1, 0), 32+(4*16), 32));
		manager.registerInfoPage("acacia_log", new GuideInfoPage("acacia_log", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("dark_oak_log", "Dark Oak Wood", new ItemStack(Blocks.LOG2, 1, 1), 32+(5*16), 32));
		manager.registerInfoPage("dark_oak_log", new GuideInfoPage("dark_oak_log", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("oak_slab", "Oak Plank Slab", new ItemStack(Blocks.WOODEN_SLAB, 1, 0), 32+(6*16), 32));
		manager.registerInfoPage("oak_slab", new GuideInfoPage("oak_slab", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("oak_stairs", "Oak Plank Stairs", new ItemStack(Blocks.OAK_STAIRS), 32+(7*16), 32));
		manager.registerInfoPage("oak_stairs", new GuideInfoPage("oak_stairs", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("oak_planks", "Oak Wood Planks", new ItemStack(Blocks.PLANKS, 1, 0), 32+(8*16), 32));
		manager.registerInfoPage("oak_planks", new GuideInfoPage("oak_planks", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("spruce_slab", "Spruce Plank Slab", new ItemStack(Blocks.WOODEN_SLAB, 1, 1), 32+(9*16), 32));
		manager.registerInfoPage("spruce_slab", new GuideInfoPage("spruce_slab", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("spruce_stairs", "Spruce Plank Stairs", new ItemStack(Blocks.SPRUCE_STAIRS), 32+(10*16), 32));
		manager.registerInfoPage("spruce_stairs", new GuideInfoPage("spruce_stairs", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("spruce_planks", "Spruce Wood Planks", new ItemStack(Blocks.PLANKS, 1, 1), 32+(11*16), 32));
		manager.registerInfoPage("spruce_planks", new GuideInfoPage("spruce_planks", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("birch_slab", "Birch Plank Slab", new ItemStack(Blocks.WOODEN_SLAB, 1, 2), 32+(12*16), 32));
		manager.registerInfoPage("birch_slab", new GuideInfoPage("birch_slab", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("birch_stairs", "Birch Plank Stairs", new ItemStack(Blocks.BIRCH_STAIRS), 32+(13*16), 32));
		manager.registerInfoPage("birch_stairs", new GuideInfoPage("birch_stairs", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("birch_planks", "Birch Wood Planks", new ItemStack(Blocks.PLANKS, 1, 2), 32+(14*16), 32));
		manager.registerInfoPage("birch_planks", new GuideInfoPage("birch_planks", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("jungle_slab", "Jungle Plank Slab", new ItemStack(Blocks.WOODEN_SLAB, 1, 3), 32+(15*16), 32));
		manager.registerInfoPage("jungle_slab", new GuideInfoPage("jungle_slab", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("jungle_stairs", "Jungle Plank Stairs", new ItemStack(Blocks.JUNGLE_STAIRS), 32+(0*16), 58));
		manager.registerInfoPage("jungle_stairs", new GuideInfoPage("jungle_stairs", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("jungle_planks", "Jungle Wood Planks", new ItemStack(Blocks.PLANKS, 1, 3), 32+(1*16), 58));
		manager.registerInfoPage("jungle_planks", new GuideInfoPage("jungle_planks", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("acacia_slab", "Acacia Plank Slab", new ItemStack(Blocks.WOODEN_SLAB, 1, 4), 32+(2*16), 58));
		manager.registerInfoPage("acacia_slab", new GuideInfoPage("acacia_slab", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("acacia_stairs", "Acacia Plank Stairs", new ItemStack(Blocks.ACACIA_STAIRS), 32+(3*16), 58));
		manager.registerInfoPage("acacia_stairs", new GuideInfoPage("acacia_stairs", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("acacia_planks", "Acacia Wood Planks", new ItemStack(Blocks.PLANKS, 1, 4), 32+(4*16), 58));
		manager.registerInfoPage("acacia_planks", new GuideInfoPage("acacia_planks", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("dark_oak_slab", "Dark Oak Plank Slab", new ItemStack(Blocks.WOODEN_SLAB, 1, 5), 32+(5*16), 58));
		manager.registerInfoPage("dark_oak_slab", new GuideInfoPage("dark_oak_slab", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("dark_oak_stairs", "Dark Oak Plank Stairs", new ItemStack(Blocks.DARK_OAK_STAIRS), 32+(6*16), 58));
		manager.registerInfoPage("dark_oak_stairs", new GuideInfoPage("dark_oak_stairs", EnumPageType.INFO));
		wood_building.addEntry(new GuideEntry("dark_oak_planks", "Dark Oak Wood Planks", new ItemStack(Blocks.PLANKS, 1, 5), 32+(7*16), 58));
		manager.registerInfoPage("dark_oak_planks", new GuideInfoPage("dark_oak_planks", EnumPageType.INFO));
		
		stone_building.addEntry(new GuideEntry("cobblestone_slab", "Cobblestone Slab", new ItemStack(Blocks.STONE_SLAB, 1, 3), 32+(0*16), 32));
		manager.registerInfoPage("cobblestone_slab", new GuideInfoPage("cobblestone_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("cobblestone_stairs", "Cobblestone Stairs", new ItemStack(Blocks.STONE_STAIRS), 32+(1*16), 32));
		manager.registerInfoPage("cobblestone_stairs", new GuideInfoPage("cobblestone_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("cobblestone", "Cobblestone", new ItemStack(Blocks.COBBLESTONE), 32+(2*16), 32));
		manager.registerInfoPage("cobblestone", new GuideInfoPage("cobblestone", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("mossy_cobblestone", "Mossy Cobblestone", new ItemStack(Blocks.MOSSY_COBBLESTONE), 32+(3*16), 32));
		manager.registerInfoPage("mossy_cobblestone", new GuideInfoPage("mossy_cobblestone", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("stone_slab", "Stone Slab", new ItemStack(Blocks.STONE_SLAB, 1, 0), 32+(4*16), 32));
		manager.registerInfoPage("stone_slab", new GuideInfoPage("stone_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("stone_brick_slab", "Stone Brick Slab", new ItemStack(Blocks.STONE_SLAB, 1, 5), 32+(5*16), 32));
		manager.registerInfoPage("stone_brick_slab", new GuideInfoPage("stone_brick_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("stone_brick_stairs", "Stone Brick Stairs", new ItemStack(Blocks.STONE_BRICK_STAIRS), 32+(6*16), 32));
		manager.registerInfoPage("stone_brick_stairs", new GuideInfoPage("stone_brick_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("stone_bricks", "Stone Bricks", new ItemStack(Blocks.STONEBRICK, 0, 0), 32+(7*16), 32));
		manager.registerInfoPage("stone_bricks", new GuideInfoPage("stone_bricks", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("mossy_stone_bricks", "Mossy Stone Bricks", new ItemStack(Blocks.STONEBRICK, 0, 1), 32+(8*16), 32));
		manager.registerInfoPage("mossy_stone_bricks", new GuideInfoPage("mossy_stone_bricks", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("cracked_stone_bricks", "Cracked Stone Bricks", new ItemStack(Blocks.STONEBRICK, 0, 2), 32+(9*16), 32));
		manager.registerInfoPage("cracked_stone_bricks", new GuideInfoPage("cracked_stone_bricks", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("chiseled_stone_bricks", "Chiseled Stone", new ItemStack(Blocks.STONEBRICK, 0, 3), 32+(10*16), 32));
		manager.registerInfoPage("chiseled_stone_bricks", new GuideInfoPage("chiseled_stone_bricks", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("polished_granite", "Polished Granite", new ItemStack(Blocks.STONE, 1, 2), 32+(11*16), 32));
		manager.registerInfoPage("polished_granite", new GuideInfoPage("polished_granite", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("polished_diorite", "Polished Diorite", new ItemStack(Blocks.STONE, 1, 4), 32+(12*16), 32));
		manager.registerInfoPage("polished_diorite", new GuideInfoPage("polished_diorite", EnumPageType.INFO));		
		stone_building.addEntry(new GuideEntry("polished_andesite", "Polished Andesite", new ItemStack(Blocks.STONE, 1, 6), 32+(13*16), 32));
		manager.registerInfoPage("polished_andesite", new GuideInfoPage("polished_andesite", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("sandstone_slab", "Sandstone Slab", new ItemStack(Blocks.STONE_SLAB, 1, 1), 32+(14*16), 32));
		manager.registerInfoPage("sandstone_slab", new GuideInfoPage("sandstone_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("sandstone_stairs", "Sandstone Stairs", new ItemStack(Blocks.SANDSTONE_STAIRS), 32+(15*16), 32));
		manager.registerInfoPage("sandstone_stairs", new GuideInfoPage("sandstone_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("smooth_sandstone", "Polished Sandstone", new ItemStack(Blocks.SANDSTONE, 0, 2), 32+(0*16), 58));
		manager.registerInfoPage("smooth_sandstone", new GuideInfoPage("smooth_sandstone", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("chiseled_sandstone", "Chiseled Sandstone", new ItemStack(Blocks.SANDSTONE, 0, 1), 32+(1*16), 58));
		manager.registerInfoPage("chiseled_sandstone", new GuideInfoPage("chiseled_sandstone", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("red_sandstone_slab", "Red Sandstone Slab", new ItemStack(Blocks.STONE_SLAB2, 1, 0), 32+(2*16), 58));
		manager.registerInfoPage("red_sandstone_slab", new GuideInfoPage("red_sandstone_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("red_sandstone_stairs", "Red Sandstone Stairs", new ItemStack(Blocks.RED_SANDSTONE_STAIRS), 32+(3*16), 58));
		manager.registerInfoPage("red_sandstone_stairs", new GuideInfoPage("red_sandstone_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("brick_slab", "Clay Brick Slab", new ItemStack(Blocks.STONE_SLAB, 1, 4), 32+(4*16), 58));
		manager.registerInfoPage("brick_slab", new GuideInfoPage("brick_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("brick_stairs", "Clay Brick Stairs", new ItemStack(Blocks.BRICK_STAIRS), 32+(5*16), 58));
		manager.registerInfoPage("brick_stairs", new GuideInfoPage("brick_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("brick_block", "Clay Bricks", new ItemStack(Blocks.BRICK_BLOCK), 32+(6*16), 58));
		manager.registerInfoPage("brick_block", new GuideInfoPage("brick_block", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("nether_brick_slab", "Nether Brick Slab", new ItemStack(Blocks.STONE_SLAB, 1, 6), 32+(7*16), 58));
		manager.registerInfoPage("nether_brick_slab", new GuideInfoPage("nether_brick_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("nether_brick_stairs", "Nether Brick Stairs", new ItemStack(Blocks.NETHER_BRICK_STAIRS), 32+(8*16), 58));
		manager.registerInfoPage("nether_brick_stairs", new GuideInfoPage("nether_brick_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("nether_bricks", "Nether Bricks", new ItemStack(Blocks.NETHER_BRICK), 32+(9*16), 58));
		manager.registerInfoPage("nether_bricks", new GuideInfoPage("nether_bricks", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("quartz_slab", "Nether Quartz Slab", new ItemStack(Blocks.STONE_SLAB, 1, 7), 32+(10*16), 58));
		manager.registerInfoPage("quartz_slab", new GuideInfoPage("quartz_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("quartz_stairs", "Nether Quartz Stairs", new ItemStack(Blocks.QUARTZ_STAIRS), 32+(11*16), 58));
		manager.registerInfoPage("quartz_stairs", new GuideInfoPage("quartz_stairs", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("quartz_block", "Block of Nether Quartz", new ItemStack(Blocks.QUARTZ_BLOCK, 0, 0), 32+(12*16), 58));
		manager.registerInfoPage("quartz_block", new GuideInfoPage("quartz_block", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("chiseled_quartz_block", "Chiseled Nether Quartz", new ItemStack(Blocks.QUARTZ_BLOCK, 0, 1), 32+(13*16), 58));
		manager.registerInfoPage("chiseled_quartz_block", new GuideInfoPage("chiseled_quartz_block", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("quartz_pillar", "Nether Quartz Pillar", new ItemStack(Blocks.QUARTZ_BLOCK, 0, 2), 32+(14*16), 58));
		manager.registerInfoPage("quartz_pillar", new GuideInfoPage("quartz_pillar", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("purpur_slab", "Purpur Tile Slab", new ItemStack(Blocks.PURPUR_SLAB, 1, 0), 32+(15*16), 58));
		manager.registerInfoPage("purpur_slab", new GuideInfoPage("purpur_slab", EnumPageType.INFO));
		stone_building.addEntry(new GuideEntry("purpur_stairs", "Purpur Tile Stairs", new ItemStack(Blocks.PURPUR_STAIRS), 32+(0*16), 84));
		manager.registerInfoPage("purpur_stairs", new GuideInfoPage("purpur_stairs", EnumPageType.INFO));
		
		decor.addEntry(new GuideEntry("torch", "Torch", new ItemStack(Blocks.TORCH), 32+(0*16), 32));
		manager.registerInfoPage("torch", new GuideInfoPage("torch", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("sign", "Sign", new ItemStack(Items.SIGN), 32+(1*16), 32));
		manager.registerInfoPage("sign", new GuideInfoPage("sign", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("flower_pot", "Flower Pot", new ItemStack(Items.FLOWER_POT), 32+(2*16), 32));
		manager.registerInfoPage("flower_pot", new GuideInfoPage("flower_pot", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("glass_pane", "Glass Pane", new ItemStack(Blocks.GLASS_PANE), 32+(3*16), 32));
		manager.registerInfoPage("glass_pane", new GuideInfoPage("glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("white_stained_glass_pane", "White Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 0), 32+(4*16), 32));
		manager.registerInfoPage("white_stained_glass_pane", new GuideInfoPage("white_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("light_gray_stained_glass_pane", "Light Gray Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 8), 32+(5*16), 32));
		manager.registerInfoPage("light_gray_stained_glass_pane", new GuideInfoPage("light_gray_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("gray_stained_glass_pane", "Gray Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 7), 32+(6*16), 32));
		manager.registerInfoPage("gray_stained_glass_pane", new GuideInfoPage("gray_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("black_stained_glass_pane", "Black Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 15), 32+(7*16), 32));
		manager.registerInfoPage("black_stained_glass_pane", new GuideInfoPage("black_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("brown_stained_glass_pane", "Brown Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 12), 32+(8*16), 32));
		manager.registerInfoPage("brown_stained_glass_pane", new GuideInfoPage("brown_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("red_stained_glass_pane", "Red Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 14), 32+(9*16), 32));
		manager.registerInfoPage("red_stained_glass_pane", new GuideInfoPage("red_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("orange_stained_glass_pane", "Orange Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 1), 32+(10*16), 32));
		manager.registerInfoPage("orange_stained_glass_pane", new GuideInfoPage("orange_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("yellow_stained_glass_pane", "Yellow Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 4), 32+(11*16), 32));
		manager.registerInfoPage("yellow_stained_glass_pane", new GuideInfoPage("yellow_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("lime_stained_glass_pane", "Lime Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 5), 32+(12*16), 32));
		manager.registerInfoPage("lime_stained_glass_pane", new GuideInfoPage("lime_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("green_stained_glass_pane", "Green Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 13), 32+(13*16), 32));
		manager.registerInfoPage("green_stained_glass_pane", new GuideInfoPage("green_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("cyan_stained_glass_pane", "Cyan Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 9), 32+(14*16), 32));
		manager.registerInfoPage("cyan_stained_glass_pane", new GuideInfoPage("cyan_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("light_blue_stained_glass_pane", "Light Blue Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 3), 32+(15*16), 32));
		manager.registerInfoPage("light_blue_stained_glass_pane", new GuideInfoPage("light_blue_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("blue_stained_glass_pane", "Blue Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 11), 32+(0*16), 58));
		manager.registerInfoPage("blue_stained_glass_pane", new GuideInfoPage("blue_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("purple_stained_glass_pane", "Purple Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 10), 32+(1*16), 58));
		manager.registerInfoPage("purple_stained_glass_pane", new GuideInfoPage("purple_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("magenta_stained_glass_pane", "Magenta Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 2), 32+(2*16), 58));
		manager.registerInfoPage("magenta_stained_glass_pane", new GuideInfoPage("magenta_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("pink_stained_glass_pane", "Pink Stained Glass Pane", new ItemStack(Blocks.STAINED_GLASS_PANE, 1, 6), 32+(3*16), 58));
		manager.registerInfoPage("pink_stained_glass_pane", new GuideInfoPage("pink_stained_glass_pane", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("iron_bars", "Iron Bars", new ItemStack(Blocks.IRON_BARS), 32+(4*16), 58));
		manager.registerInfoPage("iron_bars", new GuideInfoPage("iron_bars", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("oak_fence", "Oak Plank Fence", new ItemStack(Blocks.OAK_FENCE), 32+(5*16), 58));
		manager.registerInfoPage("oak_fence", new GuideInfoPage("oak_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("spruce_fence", "Spruce Plank Fence", new ItemStack(Blocks.SPRUCE_FENCE), 32+(6*16), 58));
		manager.registerInfoPage("spruce_fence", new GuideInfoPage("spruce_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("birch_fence", "Birch Plank Fence", new ItemStack(Blocks.BIRCH_FENCE), 32+(7*16), 58));
		manager.registerInfoPage("birch_fence", new GuideInfoPage("birch_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("jungle_fence", "Jungle Plank Fence", new ItemStack(Blocks.JUNGLE_FENCE), 32+(8*16), 58));
		manager.registerInfoPage("jungle_fence", new GuideInfoPage("jungle_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("acacia_fence", "Acacia Plank Fence", new ItemStack(Blocks.ACACIA_FENCE), 32+(9*16), 58));
		manager.registerInfoPage("acacia_fence", new GuideInfoPage("acacia_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("dark_oak_fence", "Dark Oak Plank Fence", new ItemStack(Blocks.DARK_OAK_FENCE), 32+(10*16), 58));
		manager.registerInfoPage("dark_oak_fence", new GuideInfoPage("dark_oak_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("nether_brick_fence", "Nether Brick Fence", new ItemStack(Blocks.NETHER_BRICK_FENCE), 32+(11*16), 58));
		manager.registerInfoPage("nether_brick_fence", new GuideInfoPage("nether_brick_fence", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("cobblestone_wall", "Cobblestone Wall", new ItemStack(Blocks.COBBLESTONE_WALL, 0, 0), 32+(12*16), 58));
		manager.registerInfoPage("cobblestone_wall", new GuideInfoPage("cobblestone_wall", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("mossy_cobblestone_wall", "Mossy Cobblestone Wall", new ItemStack(Blocks.COBBLESTONE_WALL, 0, 1), 32+(13*16), 58));
		manager.registerInfoPage("mossy_cobblestone_wall", new GuideInfoPage("mossy_cobblestone_wall", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("oak_fence_gate", "Oak Plank Fence Gate", new ItemStack(Blocks.OAK_FENCE_GATE), 32+(14*16), 58));
		manager.registerInfoPage("oak_fence_gate", new GuideInfoPage("oak_fence_gate", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("spruce_fence_gate", "Spruce Plank Fence Gate", new ItemStack(Blocks.SPRUCE_FENCE_GATE), 32+(15*16), 58));
		manager.registerInfoPage("spruce_fence_gate", new GuideInfoPage("spruce_fence_gate", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("birch_fence_gate", "Birch Plank Fence Gate", new ItemStack(Blocks.BIRCH_FENCE_GATE), 32+(0*16), 84));
		manager.registerInfoPage("birch_fence_gate", new GuideInfoPage("birch_fence_gate", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("jungle_fence_gate", "Jungle Plank Fence Gate", new ItemStack(Blocks.JUNGLE_FENCE_GATE), 32+(1*16), 84));
		manager.registerInfoPage("jungle_fence_gate", new GuideInfoPage("jungle_fence_gate", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("acacia_fence_gate", "Acacia Plank Fence Gate", new ItemStack(Blocks.ACACIA_FENCE_GATE), 32+(2*16), 84));
		manager.registerInfoPage("acacia_fence_gate", new GuideInfoPage("acacia_fence_gate", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("dark_oak_fence_gate", "Dark Oak Plank Fence Gate", new ItemStack(Blocks.DARK_OAK_FENCE_GATE), 32+(3*16), 84));
		manager.registerInfoPage("dark_oak_fence_gate", new GuideInfoPage("dark_oak_fence_gate", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("trapdoor", "Wooden Trapdoor", new ItemStack(Blocks.TRAPDOOR), 32+(4*16), 84));
		manager.registerInfoPage("trapdoor", new GuideInfoPage("trapdoor", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("oak_door", "Oak Door", new ItemStack(Items.OAK_DOOR), 32+(5*16), 84));
		manager.registerInfoPage("oak_door", new GuideInfoPage("oak_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("spruce_door", "Spruce Door", new ItemStack(Items.SPRUCE_DOOR), 32+(6*16), 84));
		manager.registerInfoPage("spruce_door", new GuideInfoPage("spruce_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("birch_door", "Birch Door", new ItemStack(Items.BIRCH_DOOR), 32+(7*16), 84));
		manager.registerInfoPage("birch_door", new GuideInfoPage("birch_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("jungle_door", "Jungle Door", new ItemStack(Items.JUNGLE_DOOR), 32+(8*16), 84));
		manager.registerInfoPage("jungle_door", new GuideInfoPage("jungle_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("acacia_door", "Acacia Door", new ItemStack(Items.ACACIA_DOOR), 32+(9*16), 84));
		manager.registerInfoPage("acacia_door", new GuideInfoPage("acacia_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("dark_oak_door", "Dark Oak Door", new ItemStack(Items.DARK_OAK_DOOR), 32+(10*16), 84));
		manager.registerInfoPage("dark_oak_door", new GuideInfoPage("dark_oak_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("iron_door", "Iron Door", new ItemStack(Items.IRON_DOOR), 32+(11*16), 84));
		manager.registerInfoPage("iron_door", new GuideInfoPage("iron_door", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("lit_pumpkin", "Glow-Pumpkin", new ItemStack(Blocks.LIT_PUMPKIN), 32+(12*16), 84));
		manager.registerInfoPage("lit_pumpkin", new GuideInfoPage("lit_pumpkin", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("skull_player", "Human Head", new ItemStack(Items.SKULL, 0, 3), 32+(13*16), 84));
		manager.registerInfoPage("skull_player", new GuideInfoPage("skull_player", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("skull_zombie", "Zombie Head", new ItemStack(Items.SKULL, 0, 2), 32+(14*16), 84));
		manager.registerInfoPage("skull_zombie", new GuideInfoPage("skull_zombie", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("skull_skeleton", "Skeleton Skull", new ItemStack(Items.SKULL, 0, 0), 32+(15*16), 84));
		manager.registerInfoPage("skull_skeleton", new GuideInfoPage("skull_skeleton", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("skull_wither_skeleton", "Wither Skeleton Skull", new ItemStack(Items.SKULL, 0, 1), 32+(0*16), 110));
		manager.registerInfoPage("skull_wither_skeleton", new GuideInfoPage("skull_wither_skeleton", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("skull_creeper", "Creeper Head", new ItemStack(Items.SKULL, 0, 4), 32+(1*16), 110));
		manager.registerInfoPage("skull_creeper", new GuideInfoPage("skull_creeper", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("skull_dragon", "Dragon Head", new ItemStack(Items.SKULL, 0, 5), 32+(2*16), 110));
		manager.registerInfoPage("skull_dragon", new GuideInfoPage("skull_dragon", EnumPageType.INFO));
		decor.addEntry(new GuideEntry("dragon_egg", "Dragon Egg", new ItemStack(Blocks.DRAGON_EGG), 32+(3*16), 110));
		manager.registerInfoPage("dragon_egg", new GuideInfoPage("dragon_egg", EnumPageType.INFO));
		
		utility.addEntry(new GuideEntry("ladder", "Ladder", new ItemStack(Blocks.LADDER), 32+(0*16), 32));
		manager.registerInfoPage("ladder", new GuideInfoPage("ladder", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("web", "Cobweb", new ItemStack(Blocks.WEB), 32+(1*16), 32));
		manager.registerInfoPage("web", new GuideInfoPage("web", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("bookshelf", "Bookshelf", new ItemStack(Blocks.BOOKSHELF), 32+(2*16), 32));
		manager.registerInfoPage("bookshelf", new GuideInfoPage("bookshelf", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("cauldron", "Cauldron", new ItemStack(Items.CAULDRON), 32+(3*16), 32));
		manager.registerInfoPage("cauldron", new GuideInfoPage("cauldron", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("chest", "Chest", new ItemStack(Blocks.CHEST), 32+(4*16), 32));
		manager.registerInfoPage("chest", new GuideInfoPage("chest", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("trapped_chest", "Trapped Chest", new ItemStack(Blocks.TRAPPED_CHEST), 32+(5*16), 32));
		manager.registerInfoPage("trapped_chest", new GuideInfoPage("trapped_chest", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("ender_chest", "Ender Chest", new ItemStack(Blocks.ENDER_CHEST), 32+(6*16), 32));
		manager.registerInfoPage("ender_chest", new GuideInfoPage("ender_chest", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("bed", "Bed", new ItemStack(Items.BED), 32+(7*16), 32));
		manager.registerInfoPage("bed", new GuideInfoPage("bed", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("jukebox", "Jukebox", new ItemStack(Blocks.JUKEBOX), 32+(8*16), 32));
		manager.registerInfoPage("jukebox", new GuideInfoPage("jukebox", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("tnt", "TNT", new ItemStack(Blocks.TNT), 32+(9*16), 32));
		manager.registerInfoPage("tnt", new GuideInfoPage("tnt", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("monster_egg_stone", "Stone Silverfish Burrow", new ItemStack(Blocks.MONSTER_EGG, 0, 0), 32+(10*16), 32));
		manager.registerInfoPage("monster_egg_stone", new GuideInfoPage("monster_egg_stone", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("monster_egg_cobblestone", "Cobblestone Silverfish Burrow", new ItemStack(Blocks.MONSTER_EGG, 0, 1), 32+(11*16), 32));
		manager.registerInfoPage("monster_egg_cobblestone", new GuideInfoPage("monster_egg_cobblestone", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("monster_egg_stonebrick", "Stone Brick Silverfish Burrow", new ItemStack(Blocks.MONSTER_EGG, 0, 2), 32+(12*16), 32));
		manager.registerInfoPage("monster_egg_stonebrick", new GuideInfoPage("monster_egg_stonebrick", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("monster_egg_mossy_stonebrick", "Mossy Stone Brick Silverfish Burrow", new ItemStack(Blocks.MONSTER_EGG, 0, 3), 32+(13*16), 32));
		manager.registerInfoPage("monster_egg_mossy_stonebrick", new GuideInfoPage("monster_egg_mossy_stonebrick", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("monster_egg_cracked_stonebrick", "Cracked Stone Brick Silverfish Burrow", new ItemStack(Blocks.MONSTER_EGG, 0, 4), 32+(14*16), 32));
		manager.registerInfoPage("monster_egg_cracked_stonebrick", new GuideInfoPage("monster_egg_cracked_stonebrick", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("monster_egg_chiseled_stonebrick", "Chiseled Stone Silverfish Burrow", new ItemStack(Blocks.MONSTER_EGG, 0, 5), 32+(15*16), 32));
		manager.registerInfoPage("monster_egg_chiseled_stonebrick", new GuideInfoPage("monster_egg_chiseled_stonebrick", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("mob_spawner", "Monster Spawner", new ItemStack(Blocks.MOB_SPAWNER), 32+(0*16), 58));
		manager.registerInfoPage("mob_spawner", new GuideInfoPage("mob_spawner", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("beacon", "Beacon", new ItemStack(Blocks.BEACON), 32+(1*16), 58));
		manager.registerInfoPage("beacon", new GuideInfoPage("beacon", EnumPageType.INFO));
		utility.addEntry(new GuideEntry("end_portal_frame", "End Portal Frame", new ItemStack(Blocks.END_PORTAL_FRAME), 32+(2*16), 58));
		manager.registerInfoPage("end_portal_frame", new GuideInfoPage("end_portal_frame", EnumPageType.INFO));
		
		redstone.addEntry(new GuideEntry("wood_button", "Wooden Button", new ItemStack(Blocks.WOODEN_BUTTON), 32+(0*16), 32));
		manager.registerInfoPage("wood_button", new GuideInfoPage("wood_button", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("stone_button", "Stone Button", new ItemStack(Blocks.STONE_BUTTON), 32+(1*16), 32));
		manager.registerInfoPage("stone_button", new GuideInfoPage("stone_button", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("lever", "Lever", new ItemStack(Blocks.LEVER), 32+(2*16), 32));
		manager.registerInfoPage("lever", new GuideInfoPage("lever", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("wood_pressure_plate", "Wooden Pressure Plate", new ItemStack(Blocks.WOODEN_PRESSURE_PLATE), 32+(3*16), 32));
		manager.registerInfoPage("wood_pressure_plate", new GuideInfoPage("wood_pressure_plate", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("stone_pressure_plate", "Stone Pressure Plate", new ItemStack(Blocks.STONE_PRESSURE_PLATE), 32+(4*16), 32));
		manager.registerInfoPage("stone_pressure_plate", new GuideInfoPage("stone_pressure_plate", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("light_weighted_pressure_plate", "Golden Weighted Pressure Plate", new ItemStack(Blocks.LIGHT_WEIGHTED_PRESSURE_PLATE), 32+(5*16), 32));
		manager.registerInfoPage("light_weighted_pressure_plate", new GuideInfoPage("light_weighted_pressure_plate", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("heavy_weighted_pressure_plate", "Iron Weighted Pressure Plate", new ItemStack(Blocks.HEAVY_WEIGHTED_PRESSURE_PLATE), 32+(6*16), 32));
		manager.registerInfoPage("heavy_weighted_pressure_plate", new GuideInfoPage("heavy_weighted_pressure_plate", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("tripwire_hook", "Tripwire Hook", new ItemStack(Blocks.TRIPWIRE_HOOK), 32+(7*16), 32));
		manager.registerInfoPage("tripwire_hook", new GuideInfoPage("tripwire_hook", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("daylight_detector", "Daylight Sensor", new ItemStack(Blocks.DAYLIGHT_DETECTOR), 32+(8*16), 32));
		manager.registerInfoPage("daylight_detector", new GuideInfoPage("daylight_detector", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("redstone_torch", "Redstone Torch", new ItemStack(Blocks.REDSTONE_TORCH), 32+(9*16), 32));
		manager.registerInfoPage("redstone_torch", new GuideInfoPage("redstone_torch", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("redstone_block", "Block of Redstone", new ItemStack(Blocks.REDSTONE_BLOCK), 32+(10*16), 32));
		manager.registerInfoPage("redstone_block", new GuideInfoPage("redstone_block", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("redstone", "Redstone", new ItemStack(Items.REDSTONE), 32+(11*16), 32));
		manager.registerInfoPage("redstone", new GuideInfoPage("redstone", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("redstone_repeater", "Redstone Repeater", new ItemStack(Items.REPEATER), 32+(12*16), 32));
		manager.registerInfoPage("redstone_repeater", new GuideInfoPage("redstone_repeater", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("redstone_comparator", "Redstone Comparator", new ItemStack(Items.COMPARATOR), 32+(13*16), 32));
		manager.registerInfoPage("redstone_comparator", new GuideInfoPage("redstone_comparator", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("rail", "Rail", new ItemStack(Blocks.RAIL), 32+(14*16), 32));
		manager.registerInfoPage("rail", new GuideInfoPage("rail", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("golden_rail", "Powered Rail", new ItemStack(Blocks.GOLDEN_RAIL), 32+(15*16), 32));
		manager.registerInfoPage("golden_rail", new GuideInfoPage("golden_rail", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("detector_rail", "Detector Rail", new ItemStack(Blocks.DETECTOR_RAIL), 32+(0*16), 58));
		manager.registerInfoPage("detector_rail", new GuideInfoPage("detector_rail", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("activator_rail", "Activator Rail", new ItemStack(Blocks.ACTIVATOR_RAIL), 32+(1*16), 58));
		manager.registerInfoPage("activator_rail", new GuideInfoPage("activator_rail", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("redstone_lamp", "Redstone Lamp", new ItemStack(Blocks.REDSTONE_LAMP), 32+(2*16), 58));
		manager.registerInfoPage("redstone_lamp", new GuideInfoPage("redstone_lamp", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("piston", "Piston", new ItemStack(Blocks.PISTON), 32+(3*16), 58));
		manager.registerInfoPage("piston", new GuideInfoPage("piston", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("sticky_piston", "Sticky Piston", new ItemStack(Blocks.STICKY_PISTON), 32+(4*16), 58));
		manager.registerInfoPage("sticky_piston", new GuideInfoPage("sticky_piston", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("hopper", "Hopper", new ItemStack(Blocks.HOPPER), 32+(5*16), 58));
		manager.registerInfoPage("hopper", new GuideInfoPage("hopper", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("dropper", "Dropper", new ItemStack(Blocks.DROPPER), 32+(6*16), 58));
		manager.registerInfoPage("dropper", new GuideInfoPage("dropper", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("dispenser", "Dispenser", new ItemStack(Blocks.DISPENSER), 32+(7*16), 58));
		manager.registerInfoPage("dispenser", new GuideInfoPage("dispenser", EnumPageType.INFO));
		redstone.addEntry(new GuideEntry("noteblock", "Note Block", new ItemStack(Blocks.NOTEBLOCK), 32+(8*16), 58));
		manager.registerInfoPage("noteblock", new GuideInfoPage("noteblock", EnumPageType.INFO));
		
		machine.addEntry(new GuideEntry("crafting_table", "Crafting Table", new ItemStack(Blocks.CRAFTING_TABLE), 32+(0*16), 32));
		manager.registerInfoPage("crafting_table", new GuideInfoPage("crafting_table", EnumPageType.INFO));
		machine.addEntry(new GuideEntry("anvil", "Anvil", new ItemStack(Blocks.ANVIL), 32+(1*16), 32));
		manager.registerInfoPage("anvil", new GuideInfoPage("anvil", EnumPageType.INFO));
		machine.addEntry(new GuideEntry("furnace", "Furnace", new ItemStack(Blocks.FURNACE), 32+(2*16), 32));
		manager.registerInfoPage("furnace", new GuideInfoPage("furnace", EnumPageType.INFO));
		machine.addEntry(new GuideEntry("enchanting_table", "Enchantment Table", new ItemStack(Blocks.ENCHANTING_TABLE), 32+(3*16), 32));
		manager.registerInfoPage("enchanting_table", new GuideInfoPage("enchanting_table", EnumPageType.INFO));
		machine.addEntry(new GuideEntry("brewing_stand", "Brewing Stand", new ItemStack(Items.BREWING_STAND), 32+(4*16), 32));
		manager.registerInfoPage("brewing_stand", new GuideInfoPage("brewing_stand", EnumPageType.INFO));
		
		food.addEntry(new GuideEntry("cake", "Cake", new ItemStack(Items.CAKE), 32+(0*16), 32));
		manager.registerInfoPage("cake", new GuideInfoPage("cake", EnumPageType.INFO));
	}

}
